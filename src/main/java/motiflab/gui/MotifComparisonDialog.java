/*
 * Prompt.java
 *
 * Created on 25. mars 2009, 16:45
 */

package motiflab.gui;

import java.awt.BorderLayout;
import javax.swing.BorderFactory;
import motiflab.engine.MotifLabEngine;
import motiflab.engine.data.Motif;

/**
 * This class is used for the dialog that compares a target motif 
 * (for instance one which is predicted de novo) to all motifs known
 * to the engine and lists those that are closest
 *
 * @author  kjetikl
 */
public class MotifComparisonDialog extends javax.swing.JDialog {
    protected MotifLabEngine engine;
    protected MotifLabGUI gui;
    private boolean isModal=false;
    private MotifComparisonPanel motifComparisonPanel;

        
    /** Creates new form Prompt */
    public MotifComparisonDialog(MotifLabGUI gui, Motif target, boolean modal) {
        super(gui.getFrame(),"Comparison of "+target.getName()+" to other motifs" , modal);
        this.engine=gui.getEngine();
        this.gui=gui;
        this.isModal=modal;     
        initComponents();
        getRootPane().setDefaultButton(closeButton);
        motifComparisonPanel = new MotifComparisonPanel(gui, this, target, isModal);
        mainPanel.add(motifComparisonPanel,BorderLayout.CENTER);
        motifComparisonPanel.setBorder(BorderFactory.createRaisedBevelBorder());
        closeButton.setText("Close");
        //Dimension d=new Dimension(700,500);
        //setPreferredSize(d);
        pack();        
    }


    
   /** This method can be called from the MotifComparisonPanel to notify 
    *  this dialog that all necessary comparisons have been completed
    */
    public void notifyComparisonCompleted() {  
         //closeButton.setText("Close");
        
    }

   /** This method can be called from the MotifComparisonPanel to notify 
    *  this dialog that a new round of comparisons has been started
    */
    public void notifyComparisonStarted() {
         //closeButton.setText("Cancel");
         okcancelButtonsPanel.revalidate();
    }




    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okcancelButtonsPanel = new javax.swing.JPanel();
        closeButton = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        okcancelButtonsPanel.setName("okcancelButtonsPanel"); // NOI18N
        okcancelButtonsPanel.setPreferredSize(new java.awt.Dimension(100, 40));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(motiflab.gui.MotifLabApp.class).getContext().getResourceMap(MotifComparisonDialog.class);
        closeButton.setText(resourceMap.getString("closeButton.text")); // NOI18N
        closeButton.setMaximumSize(new java.awt.Dimension(75, 27));
        closeButton.setMinimumSize(new java.awt.Dimension(75, 27));
        closeButton.setName("closeButton"); // NOI18N
        closeButton.setPreferredSize(new java.awt.Dimension(75, 27));
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonPressed(evt);
            }
        });

        javax.swing.GroupLayout okcancelButtonsPanelLayout = new javax.swing.GroupLayout(okcancelButtonsPanel);
        okcancelButtonsPanel.setLayout(okcancelButtonsPanelLayout);
        okcancelButtonsPanelLayout.setHorizontalGroup(
            okcancelButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, okcancelButtonsPanelLayout.createSequentialGroup()
                .addContainerGap(325, Short.MAX_VALUE)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        okcancelButtonsPanelLayout.setVerticalGroup(
            okcancelButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, okcancelButtonsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(okcancelButtonsPanel, java.awt.BorderLayout.SOUTH);

        mainPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setLayout(new java.awt.BorderLayout());
        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void closeButtonPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonPressed
    if (motifComparisonPanel.isProcessing()) {
        motifComparisonPanel.cancelProcessingAndWait();
        // return; // return here if cancel button should not close dialog while processing, but rather allow the user to adjust settings
    }
    setVisible(false);
}//GEN-LAST:event_closeButtonPressed


 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel okcancelButtonsPanel;
    // End of variables declaration//GEN-END:variables

  
 
}
