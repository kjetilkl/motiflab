/*
 * SetRangeDialog.java
 *
 * Created on 28. oktober 2009, 13:32
 */
package motiflab.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import motiflab.engine.data.NumericDataset;

/**
 *
 * @author  kjetikl
 */
public class SetRangeDialog extends javax.swing.JDialog {

    private Object dataset; // this is either a single NumericDataset or an array of NumericDatasets
    private MotifLabGUI gui;

    /** Creates new form SetRangeDialog for a single dataset*/
    public SetRangeDialog(MotifLabGUI gui, NumericDataset dataset) {
        super(gui.getFrame(), true);
        this.gui = gui;
        initComponents();
        setTitle("Set data range");
        minTextField.setText("" + dataset.getMinAllowedValue());
        maxTextField.setText("" + dataset.getMaxAllowedValue());
        baselineTextfield.setText("" + dataset.getBaselineValue());
        this.dataset = dataset;
        getRootPane().setDefaultButton(okButton);
        cancelButton.addActionListener(new ActionListener() { // I must do it like this because NetBeans GUI designer screwed up...
            @Override
            public void actionPerformed(ActionEvent e) {
                setVisible(false);
            }
        });
        boolean scaleToIndividual=gui.getVisualizationSettings().scaleShownNumericalRangeByIndividualSequence(dataset.getName());
        // disable other controls if "scale to individual" is selected
        scaleToIndividualSequencesCheckbox.setSelected(scaleToIndividual);
        setScaleToFitIndividual(scaleToIndividual); // update other controls based on selected status
        scaleToIndividualSequencesCheckbox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                boolean scaleToIndividual=scaleToIndividualSequencesCheckbox.isSelected();
                setScaleToFitIndividual(scaleToIndividual);
            }
        });
    }

    /** Creates new form SetRangeDialog for multiple selected datasets*/
    public SetRangeDialog(MotifLabGUI gui, NumericDataset[] datasets) {
        super(gui.getFrame(), true);
        this.gui = gui;
        initComponents();
        setTitle("Set data range");
        double max = -Double.MAX_VALUE;
        double min = Double.MAX_VALUE;
        double baseline = Double.NaN;
        for (NumericDataset data : datasets) { // use most extreme values across all datasets
            if (data.getMinAllowedValue() < min) {
                min = data.getMinAllowedValue();
            }
            if (data.getMaxAllowedValue() > max) {
                max = data.getMaxAllowedValue();
            }
            if (baseline == Double.NaN) {
                baseline = data.getBaselineValue();
            } else if (baseline != data.getBaselineValue()) {
                baseline = 0;
            } else {
                baseline = data.getBaselineValue();
            }
        }
        minTextField.setText("" + min);
        maxTextField.setText("" + max);
        baselineTextfield.setText("" + baseline);
        this.dataset = datasets;
        getRootPane().setDefaultButton(okButton);
        cancelButton.addActionListener(new ActionListener() { // I must do it like this because NetBeans GUI designer screwed up...
            @Override
            public void actionPerformed(ActionEvent e) {
                setVisible(false);
            }
        });
        VisualizationSettings settings=gui.getVisualizationSettings();
        boolean scaleToIndividual=false;
        for (NumericDataset track:datasets) {
            if (settings.scaleShownNumericalRangeByIndividualSequence(track.getName())) {scaleToIndividual=true;break;}
        }
        // disable other controls if "scale to individual" is selected
        scaleToIndividualSequencesCheckbox.setSelected(scaleToIndividual);
        setScaleToFitIndividual(scaleToIndividual); // update other controls based on selected status
        scaleToIndividualSequencesCheckbox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                boolean scaleToIndividual=scaleToIndividualSequencesCheckbox.isSelected();
                setScaleToFitIndividual(scaleToIndividual);
            }
        });     
    }

    private void setScaleToFitIndividual(boolean scaleToIndividual) {
        minTextField.setEnabled(!scaleToIndividual);
        maxTextField.setEnabled(!scaleToIndividual);
        baselineTextfield.setEnabled(!scaleToIndividual);
        scaleToFitAllButton.setEnabled(!scaleToIndividual);         
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        baselineTextfield = new javax.swing.JTextField();
        minTextField = new javax.swing.JTextField();
        baselineLabel = new javax.swing.JLabel();
        maxLabel = new javax.swing.JLabel();
        minLabel = new javax.swing.JLabel();
        maxTextField = new javax.swing.JTextField();
        buttonsPanel = new javax.swing.JPanel();
        leftButtonsPanel = new javax.swing.JPanel();
        scaleToFitAllButton = new javax.swing.JButton();
        rightButtonsPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        scaleToIndividualSequencesCheckbox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setName("jPanel1"); // NOI18N

        baselineTextfield.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(motiflab.gui.MotifLabApp.class).getContext().getResourceMap(SetRangeDialog.class);
        baselineTextfield.setText(resourceMap.getString("baselineTextfield.text")); // NOI18N
        baselineTextfield.setName("baselineTextfield"); // NOI18N

        minTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        minTextField.setText(resourceMap.getString("minTextField.text")); // NOI18N
        minTextField.setName("minTextField"); // NOI18N

        baselineLabel.setText(resourceMap.getString("baselineLabel.text")); // NOI18N
        baselineLabel.setName("baselineLabel"); // NOI18N

        maxLabel.setText(resourceMap.getString("maxLabel.text")); // NOI18N
        maxLabel.setName("maxLabel"); // NOI18N

        minLabel.setText(resourceMap.getString("minLabel.text")); // NOI18N
        minLabel.setName("minLabel"); // NOI18N

        maxTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        maxTextField.setText(resourceMap.getString("maxTextField.text")); // NOI18N
        maxTextField.setName("maxTextField"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maxLabel)
                    .addComponent(baselineLabel)
                    .addComponent(minLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(minTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(maxTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(baselineTextfield, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minLabel)
                    .addComponent(minTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxLabel)
                    .addComponent(maxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(baselineLabel)
                    .addComponent(baselineTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        buttonsPanel.setName("buttonsPanel"); // NOI18N
        buttonsPanel.setLayout(new java.awt.BorderLayout());

        leftButtonsPanel.setName("leftButtonsPanel"); // NOI18N
        leftButtonsPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        scaleToFitAllButton.setText(resourceMap.getString("scaleToFitAllButton.text")); // NOI18N
        scaleToFitAllButton.setToolTipText(resourceMap.getString("scaleToFitAllButton.toolTipText")); // NOI18N
        scaleToFitAllButton.setName("scaleToFitAllButton"); // NOI18N
        scaleToFitAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scaleToFitAllButtonActionPerformed(evt);
            }
        });
        leftButtonsPanel.add(scaleToFitAllButton);

        buttonsPanel.add(leftButtonsPanel, java.awt.BorderLayout.WEST);

        rightButtonsPanel.setName("rightButtonsPanel"); // NOI18N
        rightButtonsPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        okButton.setText(resourceMap.getString("okButton.text")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        rightButtonsPanel.add(okButton);

        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        rightButtonsPanel.add(cancelButton);

        buttonsPanel.add(rightButtonsPanel, java.awt.BorderLayout.EAST);

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        scaleToIndividualSequencesCheckbox.setText(resourceMap.getString("scaleToIndividualSequencesCheckbox.text")); // NOI18N
        scaleToIndividualSequencesCheckbox.setName("scaleToIndividualSequencesCheckbox"); // NOI18N
        jPanel2.add(scaleToIndividualSequencesCheckbox);

        buttonsPanel.add(jPanel2, java.awt.BorderLayout.NORTH);

        getContentPane().add(buttonsPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void scaleToFitAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scaleToFitAllButtonActionPerformed
        // apply the updates immediately and close the dialog
        VisualizationSettings settings=gui.getVisualizationSettings();    
        if (dataset instanceof NumericDataset) {
            double[] minmax = ((NumericDataset) dataset).getMinMaxValuesFromData();
            setNewValues((NumericDataset) dataset, minmax[0], minmax[1], ((NumericDataset) dataset).getBaselineValue());
            settings.setScaleShownNumericalRangeByIndividualSequence(((NumericDataset) dataset).getName(),false);
        } else if (dataset instanceof NumericDataset[]) {
            for (NumericDataset data : ((NumericDataset[]) dataset)) {
                double[] minmax = data.getMinMaxValuesFromData();
                setNewValues(data, minmax[0], minmax[1], data.getBaselineValue());
                settings.setScaleShownNumericalRangeByIndividualSequence(((NumericDataset) data).getName(),false);                
            }
        }
        setVisible(false); 
}//GEN-LAST:event_scaleToFitAllButtonActionPerformed

    private void setNewValues(NumericDataset data, double newmin, double newmax, double baseline) {
        if (newmax > newmin) {
            data.setBaselineValue(baseline);
            data.setMinAllowedValue(newmin);
            data.setMaxAllowedValue(newmax);
            data.notifyListenersOfDataUpdate();
            double actualNewMin = data.getMinAllowedValue();
            double actualNewMax = data.getMaxAllowedValue();
            String msg = "Visualized range for " + data.getName() + " updated to [" + actualNewMin + "," + actualNewMax + "] ";
            if (actualNewMin != newmin || actualNewMax != newmax) {
                msg += "(the range was expanded to include the baseline value)";
            }
            gui.logMessage(msg);
        }
    }

private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
   try {//GEN-LAST:event_okButtonActionPerformed
            VisualizationSettings settings=gui.getVisualizationSettings();
            boolean scaleToIndividual=scaleToIndividualSequencesCheckbox.isSelected();
            double newmin = Double.parseDouble(minTextField.getText());
            double newmax = Double.parseDouble(maxTextField.getText());
            double newbaseline = Double.parseDouble(baselineTextfield.getText());
            if (dataset instanceof NumericDataset) {
                if (!scaleToIndividual) setNewValues((NumericDataset) dataset, newmin, newmax, newbaseline);                
                settings.setScaleShownNumericalRangeByIndividualSequence(((NumericDataset) dataset).getName(),scaleToIndividual);                    
            } else if (dataset instanceof NumericDataset[]) {
                for (NumericDataset data : ((NumericDataset[]) dataset)) {                        
                    if (!scaleToIndividual) setNewValues(data, newmin, newmax, newbaseline);                       
                    settings.setScaleShownNumericalRangeByIndividualSequence(data.getName(),scaleToIndividual); 
                }
            }            
        } catch (Exception e) {}
        setVisible(false);
    }





    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel baselineLabel;
    private javax.swing.JTextField baselineTextfield;
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel leftButtonsPanel;
    private javax.swing.JLabel maxLabel;
    private javax.swing.JTextField maxTextField;
    private javax.swing.JLabel minLabel;
    private javax.swing.JTextField minTextField;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel rightButtonsPanel;
    private javax.swing.JButton scaleToFitAllButton;
    private javax.swing.JCheckBox scaleToIndividualSequencesCheckbox;
    // End of variables declaration//GEN-END:variables
}
