
/*
 * ActivateTransfacProDialog.java
 *
 * Created on 09.feb.2011, 18:21:24
 */

package motiflab.gui;

import java.awt.Cursor;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

/**
 *
 * @author kjetikl
 */
public class ActivateTransfacProDialog extends javax.swing.JDialog {
    boolean verified=false;
    MotifLabGUI gui;

    /** Creates new form ActivateTransfacProDialog */
    public ActivateTransfacProDialog(MotifLabGUI gui) {
        super(gui.getFrame(), "Unlock TRANSFAC PRO motifs", true);
        this.gui=gui;
        initComponents();
        pack();
        progressbar.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        topPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        internal1 = new javax.swing.JPanel();
        loginPanel = new javax.swing.JPanel();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        usernameTextfield = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        MessagePanel = new javax.swing.JPanel();
        messageLabel = new javax.swing.JLabel();
        buttonsPanel = new javax.swing.JPanel();
        progressPanel = new javax.swing.JPanel();
        progressbar = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        internalButtonsPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        topPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 0, 0, 0));
        topPanel.setMinimumSize(new java.awt.Dimension(255, 28));
        topPanel.setName("topPanel"); // NOI18N
        topPanel.setPreferredSize(new java.awt.Dimension(400, 28));
        topPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 15, 5));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(motiflab.gui.MotifLabApp.class).getContext().getResourceMap(ActivateTransfacProDialog.class);
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        topPanel.add(jLabel2);

        getContentPane().add(topPanel, java.awt.BorderLayout.PAGE_START);

        mainPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8), javax.swing.BorderFactory.createEtchedBorder()));
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setLayout(new java.awt.BorderLayout());

        internal1.setName("internal1"); // NOI18N
        internal1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        loginPanel.setName("loginPanel"); // NOI18N
        loginPanel.setLayout(new java.awt.GridBagLayout());

        usernameLabel.setText(resourceMap.getString("usernameLabel.text")); // NOI18N
        usernameLabel.setName("usernameLabel"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        loginPanel.add(usernameLabel, gridBagConstraints);

        passwordLabel.setText(resourceMap.getString("passwordLabel.text")); // NOI18N
        passwordLabel.setName("passwordLabel"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        loginPanel.add(passwordLabel, gridBagConstraints);

        usernameTextfield.setColumns(16);
        usernameTextfield.setText(resourceMap.getString("usernameTextfield.text")); // NOI18N
        usernameTextfield.setName("usernameTextfield"); // NOI18N
        usernameTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameEntered(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 6, 10, 0);
        loginPanel.add(usernameTextfield, gridBagConstraints);

        passwordField.setColumns(16);
        passwordField.setText(resourceMap.getString("passwordField.text")); // NOI18N
        passwordField.setName("passwordField"); // NOI18N
        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordEntered(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 6, 10, 0);
        loginPanel.add(passwordField, gridBagConstraints);

        internal1.add(loginPanel);

        mainPanel.add(internal1, java.awt.BorderLayout.PAGE_START);

        MessagePanel.setName("MessagePanel"); // NOI18N
        MessagePanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 16, 5));

        messageLabel.setText(resourceMap.getString("messageLabel.text")); // NOI18N
        messageLabel.setName("messageLabel"); // NOI18N
        MessagePanel.add(messageLabel);

        mainPanel.add(MessagePanel, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        buttonsPanel.setMinimumSize(new java.awt.Dimension(85, 40));
        buttonsPanel.setName("buttonsPanel"); // NOI18N
        buttonsPanel.setPreferredSize(new java.awt.Dimension(400, 40));
        buttonsPanel.setLayout(new java.awt.BorderLayout());

        progressPanel.setName("progressPanel"); // NOI18N
        progressPanel.setPreferredSize(new java.awt.Dimension(200, 40));

        progressbar.setFocusable(false);
        progressbar.setName("progressbar"); // NOI18N

        jLabel1.setIcon(resourceMap.getIcon("jLabel1.icon")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setToolTipText(resourceMap.getString("jLabel1.toolTipText")); // NOI18N
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jLabel1.setName("jLabel1"); // NOI18N

        javax.swing.GroupLayout progressPanelLayout = new javax.swing.GroupLayout(progressPanel);
        progressPanel.setLayout(progressPanelLayout);
        progressPanelLayout.setHorizontalGroup(
            progressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(progressPanelLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        progressPanelLayout.setVerticalGroup(
            progressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(progressPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(progressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(progressbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        buttonsPanel.add(progressPanel, java.awt.BorderLayout.WEST);

        internalButtonsPanel.setName("internalButtonsPanel"); // NOI18N
        internalButtonsPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 8, 5));

        okButton.setText(resourceMap.getString("okButton.text")); // NOI18N
        okButton.setMaximumSize(new java.awt.Dimension(75, 27));
        okButton.setMinimumSize(new java.awt.Dimension(75, 27));
        okButton.setName("okButton"); // NOI18N
        okButton.setPreferredSize(new java.awt.Dimension(75, 27));
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonPressed(evt);
            }
        });
        internalButtonsPanel.add(okButton);

        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setMaximumSize(new java.awt.Dimension(75, 27));
        cancelButton.setMinimumSize(new java.awt.Dimension(75, 27));
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.setPreferredSize(new java.awt.Dimension(75, 27));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonPressed(evt);
            }
        });
        internalButtonsPanel.add(cancelButton);

        buttonsPanel.add(internalButtonsPanel, java.awt.BorderLayout.EAST);

        getContentPane().add(buttonsPanel, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonPressed
        setVisible(false);
    }//GEN-LAST:event_cancelButtonPressed

    private void okButtonPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonPressed
        //okButton.setEnabled(false);
        String username=usernameTextfield.getText().trim();
        if (username.isEmpty()) {
            messageLabel.setText("Please enter username");
            messageLabel.setForeground(java.awt.Color.RED);
            return;
        }
        char[] passwordarray=passwordField.getPassword();
        if (passwordarray==null || passwordarray.length==0) {
            messageLabel.setText("Please enter password");
            messageLabel.setForeground(java.awt.Color.RED);
            return;
        } 
        String password=new String(passwordarray);
        password=password.trim();
        if (password.isEmpty()) {
            messageLabel.setText("Please enter password");
            messageLabel.setForeground(java.awt.Color.RED);
            return;
        }

        messageLabel.setText("Verifying credentials...");
        messageLabel.setForeground(java.awt.Color.BLACK);
        verifyCredentials(username,password);
        //setVisible(false);
    }//GEN-LAST:event_okButtonPressed

    private void usernameEntered(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameEntered
        passwordField.requestFocusInWindow();
    }//GEN-LAST:event_usernameEntered

    private void passwordEntered(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordEntered
        okButton.doClick();
    }//GEN-LAST:event_passwordEntered


    private void downloadAndInstallTRANSFAC(String address) {
        String collectionName="TRANSFAC PRO";
        java.util.Set<String> existingCollections=gui.getEngine().getPredefinedMotifCollections();
        if (existingCollections.contains(collectionName)) {
           boolean ok=false;
           String msg="There is already a predefined collection named "+collectionName+".\nYou can save the new collection under a different name\nor replace the current collection.";
           while (!ok) {
               collectionName=(String)JOptionPane.showInputDialog(gui.getFrame(), msg, "Download TRANSFAC PRO", JOptionPane.QUESTION_MESSAGE, null, null, collectionName);
               if (collectionName==null || collectionName.trim().isEmpty()) {
                   this.setVisible(false);
                   return;
               }
               String test=collectionName.replaceAll("\\s", "_");
               String nameerror=gui.getEngine().checkNameValidity(test, false);
               if (nameerror==null) ok=true;
               else msg=nameerror;
           }
        }
        try {
            String filename=collectionName.replace(" ", "_")+".mlx";
            URL url=new URL(address);
            InputStream stream=url.openStream();
            gui.getEngine().registerPredefinedMotifCollectionFromStream(stream, filename, collectionName);
            JOptionPane.showMessageDialog(ActivateTransfacProDialog.this, "Installation completed","Unlock TRANSFAC PRO motifs" ,JOptionPane.INFORMATION_MESSAGE);
            this.setVisible(false);
            return;           
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(ActivateTransfacProDialog.this, ex.getClass().toString()+":\n"+ex.getMessage(),"Error" ,JOptionPane.ERROR_MESSAGE);
            //ex.printStackTrace(System.err);
        }
    }

private void verifyCredentials(final String username, final String password) {
    progressbar.setVisible(true);
    progressbar.setIndeterminate(true);
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
       SwingWorker worker=new SwingWorker<Boolean, Void>() {
            Exception ex=null;
            String error=null;
            String address=null;
            @Override
            public Boolean doInBackground() {
                try {
                    URL                 url;
                    URLConnection   urlConn;
                    DataOutputStream    printout;
                    DataInputStream     input;
                    url = new URL (gui.getEngine().getWebSiteURL()+"activateTransfacPro.php");
                    urlConn = url.openConnection();
                    urlConn.setDoInput (true);
                    urlConn.setDoOutput (true);
                    urlConn.setUseCaches (false);
                    urlConn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
                    printout = new DataOutputStream (urlConn.getOutputStream ());
                    String content =
                    "username=" + URLEncoder.encode(username,"UTF-8") +
                    "&password=" + URLEncoder.encode(password,"UTF-8");
                    printout.writeBytes (content);
                    printout.flush ();
                    printout.close ();
                    // Get response data.
                    input = new DataInputStream (urlConn.getInputStream());
                    BufferedReader reader=new BufferedReader(new InputStreamReader(input));
                    String str;
                    while (null != ((str = reader.readLine()))){
                        if (str.startsWith("ERROR:")) { // got an error
                            error=str.substring("ERROR:".length()).trim();
                            address=null;
                            break;
                        } else if (str.startsWith("OK:")) {
                            address=str.substring("OK:".length()).trim();
                            error=null;
                        }
                    }
                    input.close ();
                } catch (Exception e) {
                  ex=e;
                }
                return Boolean.TRUE;
            } // end doInBackground
            @Override
            public void done() { // this method is invoked on the EDT!
                progressbar.setIndeterminate(false);
                progressbar.setVisible(false);
                ActivateTransfacProDialog.this.setCursor(Cursor.getDefaultCursor());
                okButton.setEnabled(true);
                if (ex!=null) {
                     String message=ex.getMessage();
                     if (message.equals("Connection refused: connect")) {
                         message+="\n\nThe MotifLab server may be down.\nPlease try again later.";
                     }
                     JOptionPane.showMessageDialog(ActivateTransfacProDialog.this, ex.getClass().getSimpleName()+":\n"+message,"Error" ,JOptionPane.ERROR_MESSAGE);
                     //ex.printStackTrace(System.err);
                } else { // it went OK
                   if (error!=null) {
                       messageLabel.setText(error);
                       messageLabel.setForeground(java.awt.Color.RED);
                   } else if (address!=null) {
                       messageLabel.setText("OK");
                       messageLabel.setForeground(java.awt.Color.BLACK);
                       downloadAndInstallTRANSFAC(address);
                   } else {
                       messageLabel.setText("Unable to download data (no source)");
                       messageLabel.setForeground(java.awt.Color.RED);
                   }
                }

            }
        }; // end of SwingWorker class
        worker.execute();

}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MessagePanel;
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel internal1;
    private javax.swing.JPanel internalButtonsPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPanel progressPanel;
    private javax.swing.JProgressBar progressbar;
    private javax.swing.JPanel topPanel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextfield;
    // End of variables declaration//GEN-END:variables

}
