/*
 * SequenceBrowser.java
 *
 * Created on 9. march 2011, 15:22
 */

package motiflab.gui;

import java.awt.Dimension;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTable;
import javax.swing.border.Border;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.RowSorterEvent;
import javax.swing.event.RowSorterListener;
import javax.swing.table.TableModel;
import motiflab.engine.data.Sequence;

/**
 *
 * @author  kjetikl
 */
public class SequenceBrowser extends javax.swing.JDialog implements ListSelectionListener, RowSorterListener, WindowListener, RedrawListener {
    private static String VISUALIZE_ALL="";
    private static String VISUALIZE_SHOWN="only matching sequences";
    private static String VISUALIZE_SELECTED="only selected sequences";
    
    private SequenceBrowserPanel sequencebrowser;
    private JTable table;
    private TableModel model;
    private VisualizationSettings settings;
    private MotifLabGUI gui;
    
    /** Creates new form MotifBrowser */
    public SequenceBrowser(MotifLabGUI gui) {
        super(gui.getFrame(), false);
        this.gui=gui;
        initComponents();
        Border emptyBorder=BorderFactory.createEmptyBorder(10,6,0,6);
        sequencebrowser=new SequenceBrowserPanel(gui,null,false,true);
        gui.getEngine().addDataListener(sequencebrowser);
        Dimension size=new Dimension(580,500);
        sequencebrowser.setPreferredSize(size);
        sequencebrowser.setBorder(BorderFactory.createCompoundBorder(emptyBorder, BorderFactory.createRaisedBevelBorder()));
        this.add(sequencebrowser);
        pack();       
        getRootPane().setDefaultButton(closeButton);
        table=sequencebrowser.getTable();
        model=table.getModel();
        table.getRowSorter().addRowSorterListener(this); 
        table.getSelectionModel().addListSelectionListener(this);   
        settings=gui.getVisualizationSettings();
        visualizefilterCombobox.setModel(new DefaultComboBoxModel(new String[]{VISUALIZE_ALL,VISUALIZE_SHOWN,VISUALIZE_SELECTED}));
        this.addWindowListener(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        visualizefilterCombobox = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(motiflab.gui.MotifLabApp.class).getContext().getResourceMap(SequenceBrowser.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jPanel1.setMinimumSize(new java.awt.Dimension(100, 40));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(100, 40));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel2.add(jLabel1);

        visualizefilterCombobox.setName("visualizefilterCombobox"); // NOI18N
        visualizefilterCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visualizefilterchanged(evt);
            }
        });
        jPanel2.add(visualizefilterCombobox);

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        closeButton.setText(resourceMap.getString("closeButton.text")); // NOI18N
        closeButton.setMaximumSize(new java.awt.Dimension(75, 27));
        closeButton.setMinimumSize(new java.awt.Dimension(75, 27));
        closeButton.setName("closeButton"); // NOI18N
        closeButton.setOpaque(false);
        closeButton.setPreferredSize(new java.awt.Dimension(75, 27));
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonClicked(evt);
            }
        });
        jPanel3.add(closeButton);

        jPanel1.add(jPanel3, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void closeButtonClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonClicked
// TODO add your handling code here:
    
    setVisible(false);//GEN-LAST:event_closeButtonClicked
    getContentPane().removeAll(); // this will release some resources
    this.dispose();
}


private void visualizefilterchanged(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visualizefilterchanged
       updateVisualization();
       String selection=(String)visualizefilterCombobox.getSelectedItem();//GEN-LAST:event_visualizefilterchanged
}

    @Override
    public void valueChanged(ListSelectionEvent e) {
        updateVisualization();
    }

    @Override
    public void sorterChanged(RowSorterEvent e) {
        table.clearSelection();
        updateVisualization();
    }

    /** Hides or shows motifs according to specification */
    private void updateVisualization() {
         String selection=(String)visualizefilterCombobox.getSelectedItem();         
         if (selection.equals(VISUALIZE_SHOWN)) {
             sequencebrowser.setVisibilityOnAllSequences(false);
             int size=table.getRowCount();             
             for (int i=0;i<size;i++) {
                 int row=table.convertRowIndexToModel(i);
                 Sequence sequence=(Sequence)model.getValueAt(row, 1);
                 settings.setSequenceVisible(sequence.getName(), true, false);
             }
             settings.notifySequenceVisibilityUpdated();
         } else if (selection.equals(VISUALIZE_SELECTED)) {
             sequencebrowser.setVisibilityOnAllSequences(false);
             int[] selected = table.getSelectedRows();            
             for (int row:selected) {
                 int modelrow=table.convertRowIndexToModel(row);
                 Sequence sequence=(Sequence)model.getValueAt(modelrow, 1);
                 settings.setSequenceVisible(sequence.getName(), true, false);
             }  
             settings.notifySequenceVisibilityUpdated();
         } else {
            return;
         }         
         gui.redraw();
    }
    

    @Override
    public void redrawEvent() {
        repaint();
    }
    
    @Override
    public void windowActivated(WindowEvent e) { }

    @Override
    public void windowClosed(WindowEvent e) {
        gui.getEngine().removeDataListener(sequencebrowser);
    }

    @Override
    public void windowClosing(WindowEvent e) { }

    @Override
    public void windowDeactivated(WindowEvent e) {}

    @Override
    public void windowDeiconified(WindowEvent e) {}

    @Override
    public void windowIconified(WindowEvent e) { }

    @Override
    public void windowOpened(WindowEvent e) {}



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JComboBox visualizefilterCombobox;
    // End of variables declaration//GEN-END:variables

}
